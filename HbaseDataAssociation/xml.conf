 ____  _           _ _     _      ____        _        ____                                _
|  ___| | _____  _(_) |__ | | ___|  _ \  __ _| |_ __ _|  _ \ _ __ ___   ___   ___  ___ ___(_)_ __   __ _
| |_  | |/ _ \ \/ / |  _ \| |/ _ \ | | |/ _` | __/ _` | |_) | \__/ _ \ / __|  / _ \/ __/ __| | _ \ / _` |
|  _| | |  __/>  <| | |_) | |  __/ |_| | (_| | || (_| |  __/| | | (_) | (__ |  __/\__ \__ \ | | | | (_| |
|_|   |_|\___/_/\_\_|_.__/|_|\___|____/ \__,_|\__\__,_|_|   |_|  \___/ \___| \___||___/___/_|_| |_|\__, |
                                                                                                    |___/


=======基础设置=======
##说明HBase、Neo4j等基本参数设置
HbaseIP地址与端口=10.0.252.201<=>4803
XML文件夹路径=
Neo4j数据库url=bolt://localhost:7687
Neo4j数据库用户名=neo4j
Neo4j数据库密码=znw159357


=======属性名设置规范=======
##说明各个表中的属性值
PAPER表所有属性
人名<=>personname
机构、单位、公司名<=>orgname
地址<=>location
摘要<=>abstracts
标题<=>title
关键字<=>keyword
分类号<=>sortnumber
Achieve表所有属性
项目基金<=>fundsproject
成果名<=>achievementname


========Hbase各个表生成顺序=======
##说明各种原始数据在各个流程中所需要建立的表
Paper->Paper_Temporary->PersonProfile
PAPER->Paper_Temporary->PaperProfile
Achievement->Achievement_Temporary->AchievementProfile
Instrument->Instrument_Temporary->InstrumentProfile
Org->Org_Temporary->OrgProfile
Project->Project_Temporary->ProjectProfile


=======提取xml文件属性设置=======
##通过设置要插入的hbase表名、xml属性信息进行xml数据转hbase操作
##格式：xml导入hbase表名={}Hbase表}
xml导入hbase表名=PAPER

##格式：xml标签属性={xml属性}
PAPER表xml标签属性=index
PAPER表xml标签属性=sortnumber
PAPER表xml标签属性=keyword
PAPER表xml标签属性=title
PAPER表xml标签属性=authors
PAPER表xml标签属性=publishinghouse
PAPER表xml标签属性=english_publishinghouse
PAPER表xml标签属性=autoreng
PAPER表xml标签属性=publishing_time
PAPER表xml标签属性=organization
PAPER表xml标签属性=fundsproject
PAPER表xml标签属性=abstracts

##此步骤与"提取xml文件属性设置"相对于。设置已提取好属性后，插入Hbase时的属性格式
##格式：{Hbase表名}的RowKey={HbaseRowKey属性}
PAPER的RowKey=title
##格式：{Hbase表名}列族信息={Hbase属性}
PAPER列族信息=index
PAPER列族信息=sortnumber
PAPER列族信息=keyword
PAPER列族信息=title
PAPER列族信息=authors
PAPER列族信息=publishinghouse
PAPER列族信息=english_publishinghouse
PAPER列族信息=autoreng
PAPER列族信息=publishing_time
PAPER列族信息=organization
PAPER列族信息=fundsproject
PAPER列族信息=abstracts


=======清洗规则配置文件=======
##设置被清洗Hbase表名与存储清洗完数据Hbase表名
##格式：清洗Hbase表名={被清洗Hbase表名}<=>{存储Hbase表名}
清洗Hbase表名=PAPER<=>PAPER_1

##格式：{被清洗Hbase表名}表属性清洗规则={属性名}:{"规则"}
##清洗规则详细说明：
##规则01：字符串中的oldStr用newStr替换     例：01_（_(
##规则02：去除字符串中的数字                例：02
##规则03：去除字符串中的字母                例：03
##规则04：去除字符串中某两个字符之间的信息    例：04_(_)
##规则05：获取某个字符或字符串之前的信息      例：05_:
##规则06：规范email的格式                 例：06
##规则08：不满足一定数目的字段值置空         例：08_=_1
##规则09：获取某个字符或字符串之后的信息      例：09_;
##规则11：替换大部分空白字符                例：11
##规则12：获取字符串中的汉字                例：12
##规则13：规范人名，中文名                  例：13
##规则间组合用"#"分隔，若规则中含有参数时，以"_"分隔参数
PAPER表属性清洗规则=index:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=sortnumber:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=keyword:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=title:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=authors:"01_ +_;#01_（_(#01_）_)#04_(_)#13"
PAPER表属性清洗规则=publishinghouse:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=english_publishinghouse:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=autoreng:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=publishing_time:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=organization:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=fundsproject:"01_（_(#01_）_)#04_(_)#01_\?_#11"
PAPER表属性清洗规则=abstracts:"01_（_(#01_）_)#04_(_)#01_\?_#11"

=======Hbase融合模块=======
##对于Hbase表中数据进行融合，构建Profile
##格式：融合Hbase表名={被融合Hbase表名}<=>{存储Hbase表名}
融合Hbase表名=PAPER_1<=>PersonProfile

##格式：{被融合Hbase表名}表融合参数={融合属性参数}<=>{合并基准属性}<=>{对比属性参数}
PAPER_1表融合参数=name,Org<=>author<=>atuhor,Org




=========Hbase表关联模块=======
##对于指定表之间通过各项属性参数替换关联表中属性值为对应ID
##格式：关联Hbase表名={主Hbase表名}<=>{关联辅助Hbase表名}
关联Hbase表名=PAPER<=>Org

##格式：{主Hbase表名},{关联辅助Hbase表名}关键参数[key/compare/bullet]={属性名}
##key为主关联表的Profile的名称、Rowkey等标志参数，compare为主关联表与关联辅助表共有参数，用作对比，bullet为主表中要建立联系的参数，副表中的标志参数
PAPER,Achieve关联参数key=personname
PAPER,Achieve关联参数compare=orgname
PAPER,Achieve关联参数bullet=achievename


=======Hbase转化至Neo4j表名=======
##将处理好的Hbase表迁移至Neo4j表名，并建立相应关系
##格式：转化表名={要转化Hbase表名}
转化表名=PaperProfile
转化表名=OrgProfile
转化表名=AchievemantProfile

##格式：表属性关系={关系Hbase表名1}<=>{关系起点Hbase表中连接属性}<=>{关系Hbase表名2}<=>module{1|2}
##后缀module为确定关系建立方向
##module1表示关系建立方向为从Hbase表1起，至HBase表2止
##module2表示关系建立方向为从Hbase表2起，至HBase表1止
##module1与module2之间关系方向相反
表属性关系=PaperProfile<=>orgname<=>OrgProfile<=>module1
表属性关系=AchievementProfile<=>orgname<=>OrgProfile<=>module1
表属性关系=AchievementProfile<=>papername<=>PaperProfile<=>module2

##Neo4j节点添加全局属性，便于Neo4j的前台管理
Neo4j节点添加全局属性=color<=>null
Neo4j节点添加全局属性=nodesize<=>null
Neo4j节点添加全局属性=groundcolor<=>null
Neo4j节点添加全局属性=textofsize<=>null
Neo4j节点添加全局属性=show<=>null
Neo4j节点添加全局属性=linesize<=>null
Neo4j节点添加全局属性=linecolor<=>null